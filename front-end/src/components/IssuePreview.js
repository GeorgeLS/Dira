import SideNav from './SideNav';
import ProjectNav from './ProjectNav';
import Footer from './Footer';
import { useState } from "react";
import { PlayForWorkOutlined } from '@material-ui/icons';
import x_icon from "../Images/x_icon.png"

const IssuePreview = () => {
  return (
      // Gia na doylepsei to sidebar
  <div className="issuePreview proj_page">
      <ProjectNav />
      <div className="center_content">
          <SideNav />
          <main>
              {/* Content */}
            <div id="content">
              <h1 id="issueName">Issue X</h1>
              <text id ="issueEpic">Epic of this issue</text>


            </div>
          </main>
      </div>
      <Footer />
  </div>
  );
}
        
  export default IssuePreview;


// ID (autogenerated), Key (autogenerated based on a project's key)
// Title
// Type:
// Epic: An issue representing a high level idea of what we want to do/achieve as a whole with requirements. Usually an Epic is something that cannot be completed in a Sprint (a sprint is usually 2 weeks)
// Story (feature): A story is an issue representing a fraction of the feature that we want to implement as part of an epic. This is basically a deliverable that can be developed and tested within the time of a sprint based on the requirements that were formed with the product owner
// Bug: An issue that tracks a defect in the implementation of a feature that came up during the sprint or after being released
// Priority: Blocker, Major, Normal, Low
// Status:
// New: An issue that was just created. We need to fill in details of the issue when we are on this status
// Open: An issue that has all the details filled in and is ready to be analysed
// Blocked: An issue that has been descoped and will be probably be prioritized in the future again
// In Development: An issue that has been analysed and is currently being developed
// To Test: An issue that has been developed and dev tested and is ready to be tested by a QA
// Resolved
// Resolution
// Unresolved: It has not been resolved yet
// Done: It has been successfully developed and tested
// Labels: A custom field that can be filled by the user in order to give a special meaning to the ticket (e.g part of specific functionality features)
// Description
// Comments
// Assignee
// Reporter
// Dates: Created, Updated, Due date
// Time tracking: Estimated, Remaining, Logged
// Fix version(s)
// Issue Links: Depends on, Relates to
// Epic link
